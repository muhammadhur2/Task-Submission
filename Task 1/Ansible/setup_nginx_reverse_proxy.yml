---
- name: Set up a simple "Hello, World!" Nginx site with SSL
  hosts: all
  become: yes
  vars:
    server_name: "yourdomain.com"
    email: "youremail@example.com"

  tasks:
    - name: Update apt cache and install Nginx
      apt:
        update_cache: yes
        name: nginx
        state: present

    - name: Install Certbot
      apt:
        name: certbot
        state: present

    - name: Install python3-certbot-nginx
      apt:
        name: python3-certbot-nginx
        state: present

    - name: Create directory for static content
      file:
        path: /var/www/hello
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Deploy "Hello, World!" index.html
      copy:
        content: |
          <html>
          <head>
            <title>Hello World</title>
          </head>
          <body>
            <h1>Hello, World!</h1>
            <p>This is a simple Nginx website served via HTTPS.</p>
          </body>
          </html>
        dest: /var/www/hello/index.html
        owner: www-data
        group: www-data
        mode: '0644'

    - name: Configure Nginx (using a template)
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/{{ server_name }}
        owner: root
        group: root
        mode: '0644'

    - name: Enable site configuration
      file:
        src: /etc/nginx/sites-available/{{ server_name }}
        dest: /etc/nginx/sites-enabled/{{ server_name }}
        state: link

    - name: Remove the default Nginx site (optional, to avoid conflicts)
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Test Nginx configuration
      command: nginx -t
      notify:
        - reload nginx

    - name: Obtain SSL certificate (Certbot + Nginx plugin)
      command: certbot --nginx -d {{ server_name }} --non-interactive --agree-tos --email {{ email }}
      notify:
        - reload nginx

  handlers:
    - name: reload nginx
      service:
        name: nginx
        state: reloaded
